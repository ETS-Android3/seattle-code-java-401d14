/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package frenchBakery;

import frenchBakery.pastry.CheeseGalette;
import frenchBakery.pastry.FruitCroissant;
import frenchBakery.pastry.Macaron;
import frenchBakery.pastry.Pastry;

public class App {
  public String testString = "hello";

  public String getGreeting() {
        return "Hello World!";
    }

  public static void main(String[] args) {
    /*System.out.println(new App().getGreeting());
    App appObject = new App();
    App anotherAppObject = appObject;
    System.out.println(anotherAppObject.testString);
    System.out.println(System.identityHashCode(appObject));
    System.out.println(System.identityHashCode(anotherAppObject));
    appObject.testString = "I was changed";
    System.out.println(anotherAppObject.testString);*/

    FruitCroissant fruitCroissant = new FruitCroissant();
    System.out.println("Fruit croissant's bakery name: " + FruitCroissant.getBakeryName());
    fruitCroissant.omNomNom();
    System.out.println(fruitCroissant);
    Macaron macaron = new Macaron();
    macaron.omNomNom();
    System.out.println("Macaron's bakery name: " + Macaron.getBakeryName());
    System.out.println("Pastry's bakery name: " + Pastry.getBakeryName());
    System.out.println(macaron);
    CheeseGalette cheeseGalette = new CheeseGalette();
    cheeseGalette.omNomNom();
    System.out.println(cheeseGalette);

    // Examples for taking input arguments
    //System.out.println("Argument 1: " + args[0]);
    //System.out.println("Argument 2: " + args[1]);

    // Recursive example for code challenge today
    System.out.println("Pyramid:");
    pyramid(3);
    // *
    // **
    // ***
    System.out.println("");
    System.out.println("Upside-down pyramid:");
    upsideDownPyramid(3);
    // ***
    // **
    // *
    System.out.println("");
    System.out.println("Shark mouth:");
    sharkMouth(3);
    // ***
    // **
    // *
    // *
    // **
    // ***
    pyramid(100000);  // StackOverflowError
  }

  private static void pyramid(int n)
  {
    if (n > 0)
    {
      pyramid(n-1);
      System.out.println("*".repeat(n));
    }
  }

  private static void upsideDownPyramid(int n)
  {
    if (n > 0)
    {
      System.out.println("*".repeat(n));
      upsideDownPyramid(n-1);
    }
  }

  private static void sharkMouth(int n)
  {
    if (n > 0)
    {
      System.out.println("*".repeat(n));
      sharkMouth(n-1);
      System.out.println("*".repeat(n));
    }
  }
}
